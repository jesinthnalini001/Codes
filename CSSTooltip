We have implemented two types of tooltips on different pages:

Page 1: "Straight in Senior Leaders"
- Tooltips appear directly when hovering over or clicking on elements related to senior leaders.

Page 2: "Information Icon at the End"
- Tooltips are triggered by clicking on an information icon at the end of the page.

In both versions:
- Users can activate tooltips by clicking on the associated elements or using the keyboard.
- To close the tooltips, users can press the Escape key or click the close icon within the tooltip.
- Clicking outside the tooltip does not dismiss it, allowing users to refer to the content while interacting with other page elements.
- Users can navigate between the tooltip header, body, and close button using the Tab key.

Could you please review this implementation and provide your feedback. 

var parent = jQuery('#parent');
var popup = jQuery('#tooltip-text');
var closeBtn = jQuery('#btn-closeid');
var title = jQuery('#tooltip-title');
var body = jQuery('#tooltip-body');

parent.on('mouseover focus', function() {
  popup.css('display', 'block');
});

// Hide when ESC is pressed
jQuery(document).on('keydown', function(e) {
  if (e.which === 27) {
    popup.css('display', 'none');
  }
});

// Hide when close button clicked
closeBtn.click(function() {
  popup.css('display', 'none');
});

parent.attr('tabindex', '0');

closeBtn.on('mouseover focus', function() {
  closeBtn.css('border', '2px solid');
});

closeBtn.on('mouseout blur', function() {
  closeBtn.css('border', 'none');
});

title.attr('tabindex', '0');
body.attr('tabindex', '0');
closeBtn.attr('tabindex', '0');

closeBtn.on('keydown', function(e) {
  if (e.which === 9 && !e.shiftKey) {
    e.preventDefault();
    title.focus();
  }
});

title.on('keydown', function(e) {
  if (e.which === 9 && e.shiftKey) {
    e.preventDefault();
    closeBtn.focus();
  }
});

body.on('keydown', function(e) {
  if (e.which === 9 && e.shiftKey) {
    e.preventDefault();
    title.focus();
  }
});

parent.click(function() {
  if (popup.css('display') === 'none') {
    popup.css('display', 'block');
    title.focus();
  } else {
    popup.css('display', 'none');
  }
});
